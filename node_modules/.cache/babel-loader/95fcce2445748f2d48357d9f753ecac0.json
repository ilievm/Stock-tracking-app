{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\misha\\\\Desktop\\\\site\\\\trying\\\\STOCK_APP\\\\trying canvas from 0(map sized)\\\\stock_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\misha\\\\Desktop\\\\site\\\\trying\\\\STOCK_APP\\\\trying canvas from 0(map sized)\\\\stock_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\misha\\\\Desktop\\\\site\\\\trying\\\\STOCK_APP\\\\trying canvas from 0(map sized)\\\\stock_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\misha\\\\Desktop\\\\site\\\\trying\\\\STOCK_APP\\\\trying canvas from 0(map sized)\\\\stock_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\misha\\\\Desktop\\\\site\\\\trying\\\\STOCK_APP\\\\trying canvas from 0(map sized)\\\\stock_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\misha\\\\Desktop\\\\site\\\\trying\\\\STOCK_APP\\\\trying canvas from 0(map sized)\\\\stock_app\\\\src\\\\views\\\\Multiseries Chart.js\";\nimport React, { Component } from 'react';\nimport './styles.css';\nimport CanvasJSReact from '../assets/canvasjs.react';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart; // let thestyles = {\n// \tbackgroundColor: 'red',\n// \twidth: '90vw',\n// }\n\nvar MultiseriesChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MultiseriesChart, _Component);\n\n  function MultiseriesChart(props) {\n    var _this;\n\n    _classCallCheck(this, MultiseriesChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiseriesChart).call(this, props));\n    _this.state = {\n      stockChartXValues: [],\n      stockChartYValues: [] //   where do we wite info from api\n\n    };\n    console.log(_this.state.stockChartXValues);\n    console.log('--------------------');\n    return _this;\n  }\n\n  _createClass(MultiseriesChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchStock();\n    } //   reading api on start\n\n  }, {\n    key: \"fetchStock\",\n    value: function fetchStock() {\n      var pointerToThis = this; // console.log(pointerToThis);\n\n      var API_KEY = '740WRQPFQK10PTAG';\n      var StockSymbol = 'INX';\n      var API_Call = \"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=\".concat(StockSymbol, \"&outputsize=compact&apikey=\").concat(API_KEY);\n      var stockChartXValuesFunction = [];\n      var stockChartYValuesFunction = [];\n      fetch(API_Call).then(function (response) {\n        return response.json();\n      })\n      /* actually fetching data */\n      .then(function (data) {\n        console.log(data);\n\n        for (var key in data['Time Series (Daily)']) {\n          stockChartXValuesFunction.push(key);\n          stockChartYValuesFunction.push(Math.floor(Number(data['Time Series (Daily)'][key]['1. open'])));\n        } // pushing them in the state\n        //   console.log(stockChartYValuesFunction);\n\n\n        pointerToThis.setState({\n          stockChartXValues: stockChartXValuesFunction,\n          stockChartYValues: stockChartYValuesFunction\n        });\n        console.log(pointerToThis.state);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var options = {\n        animationEnabled: true,\n        zoomEnabled: true,\n        includeZero: false,\n        title: {\n          text: \"Number of New Customers\"\n        },\n        axisY: {\n          title: \"Number of Customers\"\n        },\n        toolTip: {\n          shared: true\n        },\n        data: [{\n          type: \"line\",\n          dataPoints: [{\n            y: this.state.stockChartXValues[0],\n            label: this.state.stockChartYValues[0]\n          }, {\n            y: this.state.stockChartXValues[1],\n            label: this.state.stockChartYValues[1]\n          }]\n          /* ,\r\n          {\r\n          type: \"line\",\r\n          name: \"2017\",\r\n          showInLegend: true,\r\n          dataPoints: [\r\n          \t{ y: 172, label: \"Jan\" },\r\n          \t{ y: 173, label: \"Feb\" },\r\n          \t{ y: 175, label: \"Mar\" },\r\n          \t{ y: 172, label: \"Apr\" },\r\n          \t{ y: 162, label: \"May\" },\r\n          \t{ y: 165, label: \"Jun\" },\r\n          \t{ y: 172, label: \"Jul\" },\r\n          \t{ y: 168, label: \"Aug\" },\r\n          \t{ y: 175, label: \"Sept\" },\r\n          \t{ y: 170, label: \"Oct\" },\r\n          \t{ y: 165, label: \"Nov\" },\r\n          \t{ y: 169, label: \"Dec\" }\r\n          ]\r\n          } */\n\n        }]\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"React Multiseries Chart\"), React.createElement(CanvasJSChart, {\n        options: options\n        /* onRef={ref => this.chart = ref} */\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MultiseriesChart;\n}(Component);\n\nexport default MultiseriesChart;","map":{"version":3,"sources":["C:\\Users\\misha\\Desktop\\site\\trying\\STOCK_APP\\trying canvas from 0(map sized)\\stock_app\\src\\views\\Multiseries Chart.js"],"names":["React","Component","CanvasJSReact","CanvasJSChart","MultiseriesChart","props","state","stockChartXValues","stockChartYValues","console","log","fetchStock","pointerToThis","API_KEY","StockSymbol","API_Call","stockChartXValuesFunction","stockChartYValuesFunction","fetch","then","response","json","data","key","push","Math","floor","Number","setState","options","animationEnabled","zoomEnabled","includeZero","title","text","axisY","toolTip","shared","type","dataPoints","y","label"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport CanvasJSReact from '../assets/canvasjs.react';\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n \r\n// let thestyles = {\r\n// \tbackgroundColor: 'red',\r\n// \twidth: '90vw',\r\n\r\n// }\r\n\r\nclass MultiseriesChart extends Component {\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t  stockChartXValues: [],\r\n\t\t  stockChartYValues: []\r\n\t\t//   where do we wite info from api\r\n\t\t}\t\t\r\n\t\tconsole.log(this.state.stockChartXValues);\r\n\t\tconsole.log('--------------------');\r\n\r\n\t\t\r\n\t  }\r\n\t\r\n\t  componentDidMount() {\r\n\t\tthis.fetchStock();\r\n\t  }\r\n\t//   reading api on start\r\n\t\r\n\t  fetchStock() {\r\n\t\tconst pointerToThis = this;\r\n\t\t// console.log(pointerToThis);\r\n\t\tconst API_KEY = '740WRQPFQK10PTAG';\r\n\t\tlet StockSymbol = 'INX';\r\n\t\tlet API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\r\n\t\tlet stockChartXValuesFunction = [];\r\n\t\tlet stockChartYValuesFunction = [];\r\n\t\r\n\t\tfetch(API_Call)\r\n\t\t  .then(\r\n\t\t\tfunction(response) {\r\n\t\t\t  return response.json();\r\n\t\t\t}\r\n\t\t  ) /* actually fetching data */\r\n\t\t  .then(\r\n\t\t\tfunction(data) {\r\n\t\t\t  console.log(data);\r\n\t\r\n\t\t\t  for (var key in data['Time Series (Daily)']) {\r\n\t\t\t\tstockChartXValuesFunction.push(key);\r\n\t\t\t\tstockChartYValuesFunction.push(Math.floor(Number(data['Time Series (Daily)'][key]['1. open'])));\r\n\t\t\t}\r\n\t\t\t// pushing them in the state\r\n\t\t\t\r\n\t\t\t//   console.log(stockChartYValuesFunction);\r\n\t\t\t  pointerToThis.setState({\r\n\t\t\t\tstockChartXValues: stockChartXValuesFunction,\r\n\t\t\t\tstockChartYValues: stockChartYValuesFunction\r\n\t\t\t  })\r\n\t\t\t  console.log(pointerToThis.state);\r\n\t\t\t  \r\n\t\t\t}\r\n\t\t  )\r\n\t  }\r\n\t\r\n\r\n\r\n\trender() {\r\n\t\tconst options = {\r\n\t\t\t\tanimationEnabled: true,\t\r\n\t\t\t\tzoomEnabled: true,\r\n\t\t\t\tincludeZero: false,\r\n\t\t\t\ttitle:{\r\n\t\t\t\t\ttext: \"Number of New Customers\"\r\n\t\t\t\t},\r\n\t\t\t\taxisY : {\r\n\t\t\t\t\ttitle: \"Number of Customers\",\r\n\r\n\t\t\t\t},\r\n\t\t\t\ttoolTip: {\r\n\t\t\t\t\tshared: true\r\n\t\t\t\t},\r\n\t\t\t\t\r\n\t\t\t\tdata: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t  type: \"line\",\r\n\t\t\t\t\t  dataPoints: [\r\n\t\t\t\t\t  { y:this.state.stockChartXValues[0], label: this.state.stockChartYValues[0] },\r\n\t\t\t\t\t  { y:this.state.stockChartXValues[1], label: this.state.stockChartYValues[1] }\r\n\t\t\t\t\t  ]\r\n\t\t\t\t}/* ,\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"line\",\r\n\t\t\t\t\tname: \"2017\",\r\n\t\t\t\t\tshowInLegend: true,\r\n\t\t\t\t\tdataPoints: [\r\n\t\t\t\t\t\t{ y: 172, label: \"Jan\" },\r\n\t\t\t\t\t\t{ y: 173, label: \"Feb\" },\r\n\t\t\t\t\t\t{ y: 175, label: \"Mar\" },\r\n\t\t\t\t\t\t{ y: 172, label: \"Apr\" },\r\n\t\t\t\t\t\t{ y: 162, label: \"May\" },\r\n\t\t\t\t\t\t{ y: 165, label: \"Jun\" },\r\n\t\t\t\t\t\t{ y: 172, label: \"Jul\" },\r\n\t\t\t\t\t\t{ y: 168, label: \"Aug\" },\r\n\t\t\t\t\t\t{ y: 175, label: \"Sept\" },\r\n\t\t\t\t\t\t{ y: 170, label: \"Oct\" },\r\n\t\t\t\t\t\t{ y: 165, label: \"Nov\" },\r\n\t\t\t\t\t\t{ y: 169, label: \"Dec\" }\r\n\t\t\t\t\t]\r\n\t\t\t\t} */]\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t<div /* style={thestyles} */>\r\n\t\t\t<h1>React Multiseries Chart</h1>\r\n\t\t\t<CanvasJSChart options = {options} \r\n\t\t\t\t/* onRef={ref => this.chart = ref} */\r\n\t\t\t/>\r\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MultiseriesChart;"]},"metadata":{},"sourceType":"module"}