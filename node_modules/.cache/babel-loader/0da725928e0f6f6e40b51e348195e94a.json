{"ast":null,"code":"// mb define apikey\nvar Stock = {\n  fetchStock: function fetchStock(name) {\n    var stockObject = {\n      type: \"line\",\n      showInLegend: true,\n      name: '',\n      dataPoints: []\n    };\n    var pointerToThis = this; // console.log(pointerToThis);\n\n    var API_KEY = '740WRQPFQK10PTAG';\n    var API_Call = \"https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY_ADJUSTED&symbol=\".concat(name, \"&apikey=\").concat(API_KEY);\n    var stockChartXValuesFunction = [];\n    var stockChartYValuesFunction = [];\n    fetch(API_Call).then(function (response) {\n      return response.json();\n    })\n    /* actually fetching data */\n    .then(function (data) {\n      stockObject.name = data['Meta Data'][\"2. Symbol\"];\n\n      for (var key in data['Monthly Adjusted Time Series']) {\n        stockChartXValuesFunction.push(key);\n        stockChartYValuesFunction.push(Math.floor(Number(data['Monthly Adjusted Time Series'][key]['5. adjusted close'])));\n\n        for (var i = stockChartXValues.length; i >= 0; i--) {\n          stockObject.dataPoints.push({\n            y: this.state.stockChartYValues[i],\n            label: this.state.stockChartXValues[i]\n          });\n        }\n      } // pushing them in the state\n\n    });\n    return stockObject;\n  }\n};\nexport default Stock;","map":{"version":3,"sources":["C:\\Users\\misha\\Desktop\\site\\trying\\STOCK_APP\\trying canvas from 0(map sized)\\stock_app\\src\\views\\userInputFunction\\userInputFunction.jsx"],"names":["Stock","fetchStock","name","stockObject","type","showInLegend","dataPoints","pointerToThis","API_KEY","API_Call","stockChartXValuesFunction","stockChartYValuesFunction","fetch","then","response","json","data","key","push","Math","floor","Number","i","stockChartXValues","length","y","state","stockChartYValues","label"],"mappings":"AAAA;AAEA,IAAMA,KAAK,GAAG;AACFC,EAAAA,UADE,sBACSC,IADT,EACe;AACb,QAAIC,WAAW,GAAC;AACZC,MAAAA,IAAI,EAAE,MADM;AAEZC,MAAAA,YAAY,EAAE,IAFF;AAGZH,MAAAA,IAAI,EAAE,EAHM;AAIZI,MAAAA,UAAU,EAAE;AAJA,KAAhB;AAMA,QAAMC,aAAa,GAAG,IAAtB,CAPa,CAQb;;AACA,QAAMC,OAAO,GAAG,kBAAhB;AACA,QAAIC,QAAQ,4FAAqFP,IAArF,qBAAoGM,OAApG,CAAZ;AACA,QAAIE,yBAAyB,GAAG,EAAhC;AACA,QAAIC,yBAAyB,GAAG,EAAhC;AAEAC,IAAAA,KAAK,CAACH,QAAD,CAAL,CACCI,IADD,CAEI,UAASC,QAAT,EAAmB;AACnB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACC,KAJL;AAKE;AALF,KAMCF,IAND,CAOI,UAASG,IAAT,EAAe;AACfb,MAAAA,WAAW,CAACD,IAAZ,GAAmBc,IAAI,CAAC,WAAD,CAAJ,CAAkB,WAAlB,CAAnB;;AACA,WAAK,IAAIC,GAAT,IAAgBD,IAAI,CAAC,8BAAD,CAApB,EAAsD;AAClDN,QAAAA,yBAAyB,CAACQ,IAA1B,CAA+BD,GAA/B;AACAN,QAAAA,yBAAyB,CAACO,IAA1B,CAA+BC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACL,IAAI,CAAC,8BAAD,CAAJ,CAAqCC,GAArC,EAA0C,mBAA1C,CAAD,CAAjB,CAA/B;;AAEA,aAAK,IAAIK,CAAC,GAAGC,iBAAiB,CAACC,MAA/B,EAAuCF,CAAC,IAAI,CAA5C,EAA+CA,CAAC,EAAhD,EAAoD;AAChDnB,UAAAA,WAAW,CAACG,UAAZ,CAAuBY,IAAvB,CAA4B;AAACO,YAAAA,CAAC,EAAE,KAAKC,KAAL,CAAWC,iBAAX,CAA6BL,CAA7B,CAAJ;AAAqCM,YAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWH,iBAAX,CAA6BD,CAA7B;AAA5C,WAA5B;AAA0G;AACjH,OARc,CASP;;AAGP,KAnBL;AAqBE,WAAOnB,WAAP;AACH;AArCD,CAAd;AAwCA,eAAeH,KAAf","sourcesContent":["// mb define apikey\r\n\r\nconst Stock = {\r\n            fetchStock(name) {\r\n                let stockObject={\r\n                    type: \"line\",\r\n                    showInLegend: true,\r\n                    name: '',\r\n                    dataPoints: []\r\n                };\r\n                const pointerToThis = this;\r\n                // console.log(pointerToThis);\r\n                const API_KEY = '740WRQPFQK10PTAG';\r\n                let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY_ADJUSTED&symbol=${name}&apikey=${API_KEY}`;\r\n                let stockChartXValuesFunction = [];\r\n                let stockChartYValuesFunction = [];\r\n            \r\n                fetch(API_Call)\r\n                .then(\r\n                    function(response) {\r\n                    return response.json();\r\n                    }\r\n                ) /* actually fetching data */\r\n                .then(\r\n                    function(data) {\t\r\n                    stockObject.name = data['Meta Data'][\"2. Symbol\"] ;\r\n                    for (var key in data['Monthly Adjusted Time Series']) {\r\n                        stockChartXValuesFunction.push(key);\r\n                        stockChartYValuesFunction.push(Math.floor(Number(data['Monthly Adjusted Time Series'][key]['5. adjusted close'])));\r\n\r\n                        for (let i = stockChartXValues.length; i >= 0; i--) {\r\n                            stockObject.dataPoints.push({y: this.state.stockChartYValues[i], label: this.state.stockChartXValues[i]})}\r\n                    }\r\n                            // pushing them in the state\r\n                    \r\n                      \r\n                    }\r\n                  )\r\n                  return stockObject\r\n              }        \r\n}\r\n\r\nexport default Stock"]},"metadata":{},"sourceType":"module"}