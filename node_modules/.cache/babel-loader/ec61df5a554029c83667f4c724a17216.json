{"ast":null,"code":"// mb define apikey\n// second API key = 'HGJWFG4N8AQ66ICD'\nvar growthObject = {\n  type: \"splineArea\",\n  showInLegend: true,\n  axisYType: \"secondary\",\n  name: '',\n  dataPoints: []\n};\nvar Stock = {\n  fetchStock: function fetchStock(name) {\n    var stockObject = {\n      type: \"line\",\n      xValueFormatString: \"MMM YYYY\",\n      showInLegend: true,\n      name: '',\n      dataPoints: []\n    }; // console.log(pointerToThis);\n\n    var API_KEY = '740WRQPFQK10PTAG';\n    var API_Call = \"https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY_ADJUSTED&symbol=\".concat(name, \"&apikey=\").concat(API_KEY);\n    var stockChartXValuesFunction = [];\n    var stockChartYValuesFunction = [];\n    fetch(API_Call).then(function (response) {\n      return response.json();\n    })\n    /* actually fetching data */\n    .then(function (data) {\n      stockObject.name = data['Meta Data'][\"2. Symbol\"];\n      /* ` */\n\n      growthObject.name = data['Meta Data'][\"2. Symbol\"];\n\n      for (var key in data['Monthly Adjusted Time Series']) {\n        stockChartXValuesFunction.push(key);\n        stockChartYValuesFunction.push(parseInt(data['Monthly Adjusted Time Series'][key]['5. adjusted close']));\n      } // pushing them in the object\n\n\n      for (var i = 0; i < stockChartXValuesFunction.length; i++) {\n        stockObject.dataPoints.push({\n          y: stockChartYValuesFunction[i],\n          label: stockChartXValuesFunction[i]\n        });\n      } // ================================\n\n\n      for (var _i = 0; _i < stockChartXValuesFunction.length; _i++) {\n        growthObject.dataPoints.push({\n          y: stockChartYValuesFunction[_i] / stockChartYValuesFunction[stockChartYValuesFunction.length - 1],\n          label: stockChartXValuesFunction[_i]\n        });\n      }\n\n      console.log(stockObject.dataPoints);\n      console.log(growthObject.dataPoints);\n    });\n    return stockObject;\n  }\n};\nexport { Stock, growthObject };","map":{"version":3,"sources":["C:\\Users\\misha\\Desktop\\site\\trying\\STOCK_APP\\Stock-tracking-app\\src\\views\\userInputFunction\\userInputFunction.jsx"],"names":["growthObject","type","showInLegend","axisYType","name","dataPoints","Stock","fetchStock","stockObject","xValueFormatString","API_KEY","API_Call","stockChartXValuesFunction","stockChartYValuesFunction","fetch","then","response","json","data","key","push","parseInt","i","length","y","label","console","log"],"mappings":"AAAA;AACA;AAEA,IAAIA,YAAY,GAAC;AACbC,EAAAA,IAAI,EAAE,YADO;AAEbC,EAAAA,YAAY,EAAE,IAFD;AAGbC,EAAAA,SAAS,EAAE,WAHE;AAIbC,EAAAA,IAAI,EAAE,EAJO;AAKbC,EAAAA,UAAU,EAAE;AALC,CAAjB;AAQA,IAAMC,KAAK,GAAG;AACFC,EAAAA,UADE,sBACSH,IADT,EACe;AACb,QAAII,WAAW,GAAC;AACZP,MAAAA,IAAI,EAAE,MADM;AAEZQ,MAAAA,kBAAkB,EAAE,UAFR;AAGZP,MAAAA,YAAY,EAAE,IAHF;AAIZE,MAAAA,IAAI,EAAE,EAJM;AAKZC,MAAAA,UAAU,EAAE;AALA,KAAhB,CADa,CASb;;AACA,QAAMK,OAAO,GAAG,kBAAhB;AACA,QAAIC,QAAQ,4FAAqFP,IAArF,qBAAoGM,OAApG,CAAZ;AACA,QAAIE,yBAAyB,GAAG,EAAhC;AACA,QAAIC,yBAAyB,GAAG,EAAhC;AAEAC,IAAAA,KAAK,CAACH,QAAD,CAAL,CACCI,IADD,CAEI,UAASC,QAAT,EAAmB;AACnB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACC,KAJL;AAKE;AALF,KAMCF,IAND,CAOI,UAASG,IAAT,EAAe;AACfV,MAAAA,WAAW,CAACJ,IAAZ,GAAmBc,IAAI,CAAC,WAAD,CAAJ,CAAkB,WAAlB,CAAnB;AACR;;AAAelB,MAAAA,YAAY,CAACI,IAAb,GAAoBc,IAAI,CAAC,WAAD,CAAJ,CAAkB,WAAlB,CAApB;;AACP,WAAK,IAAIC,GAAT,IAAgBD,IAAI,CAAC,8BAAD,CAApB,EAAsD;AAClDN,QAAAA,yBAAyB,CAACQ,IAA1B,CAA+BD,GAA/B;AACAN,QAAAA,yBAAyB,CAACO,IAA1B,CAA+BC,QAAQ,CAACH,IAAI,CAAC,8BAAD,CAAJ,CAAqCC,GAArC,EAA0C,mBAA1C,CAAD,CAAvC;AAEH,OAPc,CAQP;;;AACR,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAiBA,CAAC,GAAGV,yBAAyB,CAACW,MAA/C,EAAuDD,CAAC,EAAxD,EAA4D;AACxDd,QAAAA,WAAW,CAACH,UAAZ,CAAuBe,IAAvB,CAA4B;AAACI,UAAAA,CAAC,EAAEX,yBAAyB,CAACS,CAAD,CAA7B;AAAkCG,UAAAA,KAAK,EAAEb,yBAAyB,CAACU,CAAD;AAAlE,SAA5B;AAAoG,OAVzF,CAWf;;;AAEA,WAAK,IAAIA,EAAC,GAAG,CAAb,EAAiBA,EAAC,GAAGV,yBAAyB,CAACW,MAA/C,EAAuDD,EAAC,EAAxD,EAA4D;AACxDtB,QAAAA,YAAY,CAACK,UAAb,CAAwBe,IAAxB,CAA6B;AAACI,UAAAA,CAAC,EAAGX,yBAAyB,CAACS,EAAD,CAAzB,GACDT,yBAAyB,CAACA,yBAAyB,CAACU,MAA1B,GAAmC,CAApC,CAD7B;AAEIE,UAAAA,KAAK,EAAEb,yBAAyB,CAACU,EAAD;AAFpC,SAA7B;AAEuE;;AAE3EI,MAAAA,OAAO,CAACC,GAAR,CAAYnB,WAAW,CAACH,UAAxB;AACAqB,MAAAA,OAAO,CAACC,GAAR,CAAY3B,YAAY,CAACK,UAAzB;AAEC,KA5BL;AAgCE,WAAOG,WAAP;AACH;AAjDD,CAAd;AAoDA,SAAQF,KAAR,EAAeN,YAAf","sourcesContent":["// mb define apikey\r\n// second API key = 'HGJWFG4N8AQ66ICD'\r\n\r\nlet growthObject={\r\n    type: \"splineArea\",\r\n    showInLegend: true,\r\n    axisYType: \"secondary\",\r\n    name: '',\r\n    dataPoints: []\r\n};\r\n\r\nconst Stock = {\r\n            fetchStock(name) {\r\n                let stockObject={\r\n                    type: \"line\",\r\n                    xValueFormatString: \"MMM YYYY\",\r\n                    showInLegend: true,\r\n                    name: '',\r\n                    dataPoints: []\r\n                };\r\n   \r\n                // console.log(pointerToThis);\r\n                const API_KEY = '740WRQPFQK10PTAG';\r\n                let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_MONTHLY_ADJUSTED&symbol=${name}&apikey=${API_KEY}`;\r\n                let stockChartXValuesFunction = [];\r\n                let stockChartYValuesFunction = [];\r\n            \r\n                fetch(API_Call)\r\n                .then(\r\n                    function(response) {\r\n                    return response.json();\r\n                    }\r\n                ) /* actually fetching data */\r\n                .then(\r\n                    function(data) {\t\r\n                    stockObject.name = data['Meta Data'][\"2. Symbol\"] ;\r\n            /* ` */        growthObject.name = data['Meta Data'][\"2. Symbol\"] ;\r\n                    for (var key in data['Monthly Adjusted Time Series']) {\r\n                        stockChartXValuesFunction.push(key);\r\n                        stockChartYValuesFunction.push(parseInt(data['Monthly Adjusted Time Series'][key]['5. adjusted close']));\r\n                        \r\n                    }\r\n                            // pushing them in the object\r\n                    for (let i = 0;  i < stockChartXValuesFunction.length; i++) {\r\n                        stockObject.dataPoints.push({y: stockChartYValuesFunction[i], label: stockChartXValuesFunction[i]})}     \r\n                    // ================================\r\n\r\n                    for (let i = 0;  i < stockChartXValuesFunction.length; i++) {\r\n                        growthObject.dataPoints.push({y: (stockChartYValuesFunction[i]/\r\n                                                         stockChartYValuesFunction[stockChartYValuesFunction.length - 1] ),\r\n                                                         label: stockChartXValuesFunction[i]})}  \r\n                    \r\n                    console.log(stockObject.dataPoints);\r\n                    console.log(growthObject.dataPoints);\r\n                    \r\n                    }\r\n                    \r\n                  )\r\n                  \r\n                  return stockObject\r\n              }        \r\n}\r\n\r\nexport {Stock, growthObject};"]},"metadata":{},"sourceType":"module"}