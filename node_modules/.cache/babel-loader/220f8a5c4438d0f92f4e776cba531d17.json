{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\misha\\\\Desktop\\\\site\\\\trying\\\\STOCK_APP\\\\Stock-tracking-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\misha\\\\Desktop\\\\site\\\\trying\\\\STOCK_APP\\\\Stock-tracking-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\misha\\\\Desktop\\\\site\\\\trying\\\\STOCK_APP\\\\Stock-tracking-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\misha\\\\Desktop\\\\site\\\\trying\\\\STOCK_APP\\\\Stock-tracking-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\misha\\\\Desktop\\\\site\\\\trying\\\\STOCK_APP\\\\Stock-tracking-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\misha\\\\Desktop\\\\site\\\\trying\\\\STOCK_APP\\\\Stock-tracking-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\misha\\\\Desktop\\\\site\\\\trying\\\\STOCK_APP\\\\Stock-tracking-app\\\\src\\\\views\\\\Multiseries Chart.jsx\";\nimport React, { Component } from 'react';\nimport './styles.css';\nimport CanvasJSReact from '../assets/canvasjs.react';\nimport Stock from \"./userInputFunction/userInputFunction\";\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nvar options;\nvar searchTearm;\nvar counter = 0;\n\nvar MultiseriesChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MultiseriesChart, _Component);\n\n  function MultiseriesChart(props) {\n    var _this;\n\n    _classCallCheck(this, MultiseriesChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiseriesChart).call(this, props));\n    _this.state = {\n      visible: false\n    };\n    _this.pushData = _this.pushData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSearch = _this.handleSearch.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleVisibility = _this.toggleVisibility.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.testlog = _this.testlog.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MultiseriesChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //   on startup calling userinput\n      var receivedObjects = Stock.fetchStock('INX');\n      options.data.push(receivedObjects[0]);\n      options.data.push(receivedObjects[1]);\n      ++counter;\n      console.log(counter);\n      this.addStock.value = \"\";\n      setTimeout(function () {\n        _this2.rerenderOnUpd();\n      }, 800);\n      setTimeout(function () {\n        _this2.rerenderOnUpd();\n      }, 1800);\n      setTimeout(function () {\n        _this2.rerenderOnUpd();\n      }, 2500);\n    } //   reading api on start\n\n  }, {\n    key: \"rerenderOnUpd\",\n    value: function rerenderOnUpd() {\n      this.chart.render();\n    }\n  }, {\n    key: \"handleSearch\",\n    value: function handleSearch(event) {\n      searchTearm = event.target.value.toUpperCase();\n    } // assigns to searchTerm whatever is in typed in the input field\n\n  }, {\n    key: \"enterPressed\",\n    value: function enterPressed(event) {\n      var code = event.keyCode || event.which;\n\n      if (code === 13) {\n        //13 is the enter keycode\n        this.pushData();\n      }\n    }\n  }, {\n    key: \"pushData\",\n    value: function pushData() {\n      var _this3 = this;\n\n      var receivedObjects = Stock.fetchStock(searchTearm); // calling fetchStock from imported \"userinput\" file\n\n      options.data.push(receivedObjects[0]);\n      options.data.push(receivedObjects[1]); // this.chart.render();\n\n      ++counter;\n      console.log(counter);\n      this.addStock.value = \"\";\n      setTimeout(function () {\n        _this3.rerenderOnUpd();\n      }, 800);\n      setTimeout(function () {\n        _this3.rerenderOnUpd();\n      }, 1800);\n      setTimeout(function () {\n        _this3.rerenderOnUpd();\n      }, 3500); // rerendering chart to ensure that if stock takes a lot of time to render it will appear\t\t\n    }\n  }, {\n    key: \"toggleVisibility\",\n    value: function toggleVisibility() {\n      for (var value in options.data) {\n        // if (options.data.value ) {\n        // \telement = options.data[value];\n        // }\n        console.log(value);\n      }\n    }\n  }, {\n    key: \"testlog\",\n    value: function testlog() {\n      alert(\"mama mia\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      // initial charts below\n      options = {\n        backgroundColor: '#f2f1f0',\n        animationEnabled: true,\n        zoomEnabled: true,\n        exportEnabled: true,\n        title: {\n          text: \"Stock Perfomance\"\n        },\n        axisX: {\n          reversed: true\n        },\n        axisY: {\n          title: \"Price(USD)\",\n          prefix: \"$\",\n          includeZero: true\n        },\n        axisY2: {\n          title: \"Percent\",\n          suffix: \"%\",\n          lineColor: \"#C0504E\",\n          tickColor: \"#C0504E\",\n          labelFontColor: \"#C0504E\"\n        },\n        toolTip: {\n          shared: true\n        },\n        data: []\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"React Multiseries Chart\"), React.createElement(CanvasJSChart, {\n        options: options,\n        onRef: function onRef(ref) {\n          return _this4.chart = ref;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"field-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"input-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: function ref(el) {\n          return _this4.addStock = el;\n        },\n        required: \"required\",\n        onChange: this.handleSearch,\n        onKeyPress: this.enterPressed.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Stock symbol\"), React.createElement(\"div\", {\n        className: \"bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"input-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"btn-bg bg-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"btn btn-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.pushData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Add stock\"))))), React.createElement(\"div\", {\n        className: \"togglePercent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"toggleText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Display percentage growth:\"), React.createElement(\"div\", {\n        className: \"switch_box box_1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"switch_1\",\n        onClick: this.testlog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MultiseriesChart;\n}(Component);\n\nexport { MultiseriesChart, counter };","map":{"version":3,"sources":["C:\\Users\\misha\\Desktop\\site\\trying\\STOCK_APP\\Stock-tracking-app\\src\\views\\Multiseries Chart.jsx"],"names":["React","Component","CanvasJSReact","Stock","CanvasJSChart","options","searchTearm","counter","MultiseriesChart","props","state","visible","pushData","bind","handleSearch","toggleVisibility","testlog","receivedObjects","fetchStock","data","push","console","log","addStock","value","setTimeout","rerenderOnUpd","chart","render","event","target","toUpperCase","code","keyCode","which","alert","backgroundColor","animationEnabled","zoomEnabled","exportEnabled","title","text","axisX","reversed","axisY","prefix","includeZero","axisY2","suffix","lineColor","tickColor","labelFontColor","toolTip","shared","ref","el","enterPressed"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport CanvasJSReact from '../assets/canvasjs.react';\r\nimport Stock from \"./userInputFunction/userInputFunction\";\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nlet options;\r\nlet searchTearm;\r\nlet counter = 0;\r\n\r\n\r\nclass MultiseriesChart extends Component {\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvisible: false\r\n\t\t}\t\t\t\r\n\t\tthis.pushData=this.pushData.bind(this);\r\n\t\tthis.handleSearch=this.handleSearch.bind(this)\t\r\n\t\tthis.toggleVisibility=this.toggleVisibility.bind(this)\t\r\n\t\tthis.testlog=this.testlog.bind(this)\t\r\n\t  }\r\n\t\r\n\t  componentDidMount() {\r\n\t\t//   on startup calling userinput\r\n\t\tconst receivedObjects = Stock.fetchStock('INX')\t\t \r\n\t\toptions.data.push(receivedObjects[0]); \r\n\t\toptions.data.push(receivedObjects[1]); \r\n\t\t++counter;\r\n\t\tconsole.log(counter);\r\n\t\t\r\n\t\tthis.addStock.value = \"\";\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.rerenderOnUpd();\r\n\t\t}, 800);\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.rerenderOnUpd();\r\n\t\t}, 1800);\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.rerenderOnUpd();\r\n\t\t}, 2500) \r\n\t  }\r\n\t//   reading api on start\r\n\r\n\trerenderOnUpd() {\r\n\t\tthis.chart.render()\r\n\t}\r\n\r\n\thandleSearch(event){\r\n\t\tsearchTearm = event.target.value.toUpperCase()}\r\n\t// assigns to searchTerm whatever is in typed in the input field\r\n\r\n\tenterPressed(event) {\r\n\t\tvar code = event.keyCode || event.which;\r\n\t\tif(code === 13) { //13 is the enter keycode\r\n\t\t\tthis.pushData()\r\n\t\t} \r\n\t}\r\n\r\n\tpushData(){\r\n\t\tconst receivedObjects = Stock.fetchStock(searchTearm)\t\t \r\n\t\t// calling fetchStock from imported \"userinput\" file\r\n\t\toptions.data.push(receivedObjects[0]); \r\n\t\toptions.data.push(receivedObjects[1]); \r\n\t\t// this.chart.render();\r\n\t\t++counter;\r\n\t\tconsole.log(counter);\r\n\t\t\r\n\t\tthis.addStock.value = \"\";\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.rerenderOnUpd();\r\n\t\t}, 800);\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.rerenderOnUpd();\r\n\t\t}, 1800);\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.rerenderOnUpd();\r\n\t\t}, 3500) \r\n\t\t// rerendering chart to ensure that if stock takes a lot of time to render it will appear\t\t\r\n\t}\r\n\r\n\ttoggleVisibility(){\r\n\t\tfor (const value in options.data) {\r\n\t\t\t// if (options.data.value ) {\r\n\t\t\t// \telement = options.data[value];\r\n\t\t\t\t\r\n\t\t\t// }\r\n\t\t\tconsole.log(value);\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\ttestlog(){\r\n\t\talert(\"mama mia\")\r\n\t}\r\n\r\n\trender() {\r\n\t\t// initial charts below\r\n\t\t\toptions = {\r\n\t\t\t\tbackgroundColor: '#f2f1f0',\r\n\t\t\t\tanimationEnabled: true,\t\r\n\t\t\t\tzoomEnabled: true,\r\n\t\t\t\texportEnabled: true,\r\n\t\t\t\ttitle:{\r\n\t\t\t\t\ttext: \"Stock Perfomance\"\r\n\t\t\t\t},\r\n\t\t\t\taxisX:{\r\n\t\t\t\t\treversed: true,\r\n\t\t\t\t},\r\n\t\t\t\taxisY : {\r\n\t\t\t\t\ttitle: \"Price(USD)\",\r\n\t\t\t\t\tprefix: \"$\",\r\n\t\t\t\t\tincludeZero: true\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\taxisY2: {\r\n\t\t\t\t\ttitle: \"Percent\",\r\n\t\t\t\t\tsuffix: \"%\",\r\n\t\t\t\t\tlineColor: \"#C0504E\",\r\n\t\t\t\t\ttickColor: \"#C0504E\",\r\n\t\t\t\t\tlabelFontColor: \"#C0504E\"\r\n\t\t\t\t},\r\n\t\t\t\ttoolTip: {\r\n\t\t\t\t\tshared: true\r\n\t\t\t\t},\r\n\t\t\t\t\r\n\t\t\t\tdata: [\t]}\r\n\r\n\t\t\t\t\r\n\t\treturn (\r\n\t\t\t<div /* style={thestyles} */>\r\n\t\t\t<h1>React Multiseries Chart</h1>\r\n\t\t\t<CanvasJSChart options = {options} \r\n\t\t\t\tonRef={ref => this.chart = ref}\t\t/>\r\n\t\t\t{/* You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods */}\r\n\t\t\t<div className=\"field\"><div className=\"field-box\"/><div className=\"field-box\"/></div>\r\n\t\t\t<div className=\"input-box\">\r\n\t\t\t\t<div className=\"input-block\">\r\n\t\t\t\t\t<div className=\"group\">\r\n\t\t\t\t\t\t<input type=\"text\" id=\"name\" \r\n\t\t\t\t\t\t\t   ref={el => this.addStock = el} \r\n\t\t\t\t\t\t\t   required=\"required\" \r\n\t\t\t\t\t\t\t   onChange={this.handleSearch}\r\n\t\t\t\t\t\t\t   onKeyPress={this.enterPressed.bind(this)}\r\n\t\t\t\t\t\t />\r\n\t\t\t\t\t\t<label htmlFor=\"name\">Stock symbol</label>\r\n\t\t\t\t\t\t<div className=\"bar\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"input-block\">\r\n\t\t\t\t\t<div className=\"btn-bg bg-2\">\r\n\t\t\t\t\t\t<div className=\"btn btn-2\">\r\n\t\t\t\t\t\t\t<button onClick={this.pushData}>Add stock</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<div className=\"togglePercent\">\r\n\t\t\t\t<p className=\"toggleText\">Display percentage growth:</p>\r\n\t\t\t\t<div className=\"switch_box box_1\">\r\n\t\t\t\t\t<input type=\"checkbox\" className=\"switch_1\" onClick={this.testlog} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport  {MultiseriesChart, counter};"]},"metadata":{},"sourceType":"module"}